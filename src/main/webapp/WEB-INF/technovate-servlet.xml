<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/jee 
	http://www.springframework.org/schema/jee/spring-jee.xsd http://www.springframework.org/schema/lang 
	http://www.springframework.org/schema/lang/spring-lang.xsd http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util.xsd">
  

	 <!-- <context:annotation-config/> -->
    <aop:aspectj-autoproxy/>
     <tx:annotation-driven transaction-manager="transactionManager" />

	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jacksonMessageConverter" />
			</list>
		</property>
	</bean>
 

	<bean id="jacksonMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="/WEB-INF/jdbc.properties" />
	</bean>




	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.databaseurl}" p:username="${jdbc.username}" p:password="${jdbc.password}" />

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation">
			<value>/resources/hibernate.cfg.xml</value>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${jdbc.dialect}</prop>
				<prop key="hibernate.show_sql">true</prop>
<!-- 				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop> -->
			</props>
		</property>
	</bean>



	<bean id="userDao" class="com.i2india.DAOImpl.UserDAOImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="userService" class="com.i2india.serviceImpl.UserServiceImpl">
		<property name="userDao" ref="userDao"></property>
	</bean>

	<bean id="orderDao" class="com.i2india.DAOImpl.OrderDAOImpl">
	<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="orderService" class="com.i2india.serviceImpl.OrderServiceImpl">
	<property name="userDao" ref="userDao"></property>
	<property name="orderDao" ref="orderDao"></property>
	</bean>

	<bean id="messageService" class="com.i2india.serviceImpl.MessageServiceImpl">
	</bean>
	
	
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	</beans> 








